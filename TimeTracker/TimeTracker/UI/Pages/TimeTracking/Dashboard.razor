@page "/Dashboard"
@using UI.Pages.Admin
@using UI.Pages.Shared

<h3>Dashboard</h3>

<AuthorizeView Roles="Admin">
    <Authorized>
        <select @bind="UserId">
            <option value="@UserId">Self</option>
            @foreach(var user in UserList!)
            {
                <option value="@user.Item1">@user.Item2</option>
            }
        </select>
        <label>View all:</label><input type="checkbox" @bind="ViewAll"/>
        <button @onclick="ToggleAdd">Toggle add shift dialog</button>
        @if (ShowAdd)
        {
            <AddEditShift ShiftUserId="@UserId" />
        }
    </Authorized>
    <NotAuthorized></NotAuthorized>
</AuthorizeView>
<div>
    <p>Generate report for dates</p>
    <label>Start Time</label><input type="datetime-local" @bind="ReportStartDate"/><br />
    <label>End Time</label><input type="datetime-local" @bind="ReportEndDate"/><br />
    <label>Time Zone</label><select @bind="ReportTimeZone"><TzOptions/></select>
    <button @onclick="GenerateReport">Select</button>
</div>
<TimestampReport TZ="@ReportTimeZone" ReportData="@ReportData"/>

@code {
    protected bool ShowAdd { get; set; }
    protected async Task ToggleAdd()
    {
        ShowAdd = !ShowAdd;
        await InvokeAsync(StateHasChanged);
    }
    protected async Task GenerateReport()
    {
        ReportData = await GenerateReportData();
        await InvokeAsync(StateHasChanged);
    }

    protected async Task ToggleViewAllReport()
    {
        ViewAll = !ViewAll;
        await InvokeAsync(StateHasChanged);
    }

    protected override async Task OnInitializedAsync()
    {
        UserId = await GetUserId();
        Task.Run(async () => UserList = await GetUserList()).Wait();
    }
}
